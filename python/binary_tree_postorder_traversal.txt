class Solution:
    def postorderTraversal(self, root: Optional[TreeNode]) -> List[int]:
        if not root:
            return[]
        
        stack = [root]
        result = []        

        while stack:
           current = stack.pop()
           result.append(current.val)
           if current.left:
                stack.append(current.left)
           if current.right:
                stack.append(current.right)

        return result[::-1]
            
           